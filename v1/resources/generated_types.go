// Package resources provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package resources

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Defines values for CapabilityMethods.
const (
	DELETE CapabilityMethods = "DELETE"
	GET    CapabilityMethods = "GET"
	PATCH  CapabilityMethods = "PATCH"
	POST   CapabilityMethods = "POST"
	PUT    CapabilityMethods = "PUT"
)

// Defines values for GroupEntitlementsPatchItemOp.
const (
	GroupEntitlementsPatchItemOpAdd    GroupEntitlementsPatchItemOp = "add"
	GroupEntitlementsPatchItemOpRemove GroupEntitlementsPatchItemOp = "remove"
)

// Defines values for GroupIdentitiesPatchItemOp.
const (
	GroupIdentitiesPatchItemOpAdd    GroupIdentitiesPatchItemOp = "add"
	GroupIdentitiesPatchItemOpRemove GroupIdentitiesPatchItemOp = "remove"
)

// Defines values for GroupRolesPatchItemOp.
const (
	GroupRolesPatchItemOpAdd    GroupRolesPatchItemOp = "add"
	GroupRolesPatchItemOpRemove GroupRolesPatchItemOp = "remove"
)

// Defines values for IdentityEntitlementsPatchItemOp.
const (
	IdentityEntitlementsPatchItemOpAdd    IdentityEntitlementsPatchItemOp = "add"
	IdentityEntitlementsPatchItemOpRemove IdentityEntitlementsPatchItemOp = "remove"
)

// Defines values for IdentityGroupsPatchItemOp.
const (
	IdentityGroupsPatchItemOpAdd    IdentityGroupsPatchItemOp = "add"
	IdentityGroupsPatchItemOpRemove IdentityGroupsPatchItemOp = "remove"
)

// Defines values for IdentityProviderSyncMode.
const (
	Import IdentityProviderSyncMode = "import"
)

// Defines values for IdentityRolesPatchItemOp.
const (
	IdentityRolesPatchItemOpAdd    IdentityRolesPatchItemOp = "add"
	IdentityRolesPatchItemOpRemove IdentityRolesPatchItemOp = "remove"
)

// Defines values for RoleEntitlementsPatchItemOp.
const (
	Add    RoleEntitlementsPatchItemOp = "add"
	Remove RoleEntitlementsPatchItemOp = "remove"
)

// AvailableIdentityProvider defines model for AvailableIdentityProvider.
type AvailableIdentityProvider struct {
	Id   string  `json:"id"`
	Name *string `json:"name,omitempty"`
}

// AvailableIdentityProviders defines model for AvailableIdentityProviders.
type AvailableIdentityProviders struct {
	Data []AvailableIdentityProvider `json:"data"`
}

// Capabilities defines model for Capabilities.
type Capabilities struct {
	Data []Capability `json:"data"`
}

// Capability defines model for Capability.
type Capability struct {
	Endpoint string              `json:"endpoint"`
	Methods  []CapabilityMethods `json:"methods"`
}

// CapabilityMethods defines model for Capability.Methods.
type CapabilityMethods string

// Entity defines model for Entity.
type Entity struct {
	Id   string `json:"id" validate:"required"`
	Type string `json:"type" validate:"required"`
}

// EntityEntitlement defines model for EntityEntitlement.
type EntityEntitlement struct {
	EntitlementType string `json:"entitlement_type" validate:"required"`
	EntityName      string `json:"entity_name" validate:"required"`
	EntityType      string `json:"entity_type" validate:"required"`
}

// EntityEntitlementItem defines model for EntityEntitlementItem.
type EntityEntitlementItem struct {
	Entitlement EntityEntitlement `json:"entitlement"`
}

// GetAvailableIdentityProvidersResponse defines model for GetAvailableIdentityProvidersResponse.
type GetAvailableIdentityProvidersResponse struct {
	Links   ResponseLinks               `json:"_links"`
	Meta    ResponseMeta                `json:"_meta"`
	Data    []AvailableIdentityProvider `json:"data"`
	Message string                      `json:"message"`
	Status  int                         `json:"status"`
}

// GetCapabilitiesResponse defines model for GetCapabilitiesResponse.
type GetCapabilitiesResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Capability  `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetEntitlementsResponse defines model for GetEntitlementsResponse.
type GetEntitlementsResponse struct {
	Links   ResponseLinks       `json:"_links"`
	Meta    ResponseMeta        `json:"_meta"`
	Data    []EntityEntitlement `json:"data"`
	Message string              `json:"message"`
	Status  int                 `json:"status"`
}

// GetGroupEntitlementsResponse defines model for GetGroupEntitlementsResponse.
type GetGroupEntitlementsResponse struct {
	Links   ResponseLinks       `json:"_links"`
	Meta    ResponseMeta        `json:"_meta"`
	Data    []EntityEntitlement `json:"data"`
	Message string              `json:"message"`
	Status  int                 `json:"status"`
}

// GetGroupIdentitiesResponse defines model for GetGroupIdentitiesResponse.
type GetGroupIdentitiesResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Identity    `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetGroupRolesResponse defines model for GetGroupRolesResponse.
type GetGroupRolesResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Role        `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetGroupsResponse defines model for GetGroupsResponse.
type GetGroupsResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Group       `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetIdentitiesResponse defines model for GetIdentitiesResponse.
type GetIdentitiesResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Identity    `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetIdentityEntitlementsResponse defines model for GetIdentityEntitlementsResponse.
type GetIdentityEntitlementsResponse struct {
	Links   ResponseLinks       `json:"_links"`
	Meta    ResponseMeta        `json:"_meta"`
	Data    []EntityEntitlement `json:"data"`
	Message string              `json:"message"`
	Status  int                 `json:"status"`
}

// GetIdentityGroupsResponse defines model for GetIdentityGroupsResponse.
type GetIdentityGroupsResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Group       `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetIdentityProvidersResponse defines model for GetIdentityProvidersResponse.
type GetIdentityProvidersResponse struct {
	Links   ResponseLinks      `json:"_links"`
	Meta    ResponseMeta       `json:"_meta"`
	Data    []IdentityProvider `json:"data"`
	Message string             `json:"message"`
	Status  int                `json:"status"`
}

// GetIdentityRolesResponse defines model for GetIdentityRolesResponse.
type GetIdentityRolesResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Role        `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetResourcesResponse defines model for GetResourcesResponse.
type GetResourcesResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Resource    `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// GetRoleEntitlementsResponse defines model for GetRoleEntitlementsResponse.
type GetRoleEntitlementsResponse struct {
	Links   ResponseLinks       `json:"_links"`
	Meta    ResponseMeta        `json:"_meta"`
	Data    []EntityEntitlement `json:"data"`
	Message string              `json:"message"`
	Status  int                 `json:"status"`
}

// GetRolesResponse defines model for GetRolesResponse.
type GetRolesResponse struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Data    []Role        `json:"data"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// Group defines model for Group.
type Group struct {
	Id   *string `json:"id,omitempty"`
	Name string  `json:"name" validate:"required"`
}

// GroupEntitlementsPatchItem defines model for GroupEntitlementsPatchItem.
type GroupEntitlementsPatchItem struct {
	Entitlement EntityEntitlement            `json:"entitlement"`
	Op          GroupEntitlementsPatchItemOp `json:"op" validate:"required,oneof=add remove"`
}

// GroupEntitlementsPatchItemOp defines model for GroupEntitlementsPatchItem.Op.
type GroupEntitlementsPatchItemOp string

// GroupEntitlementsPatchRequestBody defines model for GroupEntitlementsPatchRequestBody.
type GroupEntitlementsPatchRequestBody struct {
	Patches []GroupEntitlementsPatchItem `json:"patches" validate:"required,gt=0,dive"`
}

// GroupIdentitiesPatchItem defines model for GroupIdentitiesPatchItem.
type GroupIdentitiesPatchItem struct {
	Identity string                     `json:"identity" validate:"required"`
	Op       GroupIdentitiesPatchItemOp `json:"op" validate:"required,oneof=add remove"`
}

// GroupIdentitiesPatchItemOp defines model for GroupIdentitiesPatchItem.Op.
type GroupIdentitiesPatchItemOp string

// GroupIdentitiesPatchRequestBody defines model for GroupIdentitiesPatchRequestBody.
type GroupIdentitiesPatchRequestBody struct {
	Patches []GroupIdentitiesPatchItem `json:"patches" validate:"required,gt=0,dive"`
}

// GroupRolesPatchItem defines model for GroupRolesPatchItem.
type GroupRolesPatchItem struct {
	Op   GroupRolesPatchItemOp `json:"op" validate:"required,oneof=add remove"`
	Role string                `json:"role" validate:"required"`
}

// GroupRolesPatchItemOp defines model for GroupRolesPatchItem.Op.
type GroupRolesPatchItemOp string

// GroupRolesPatchRequestBody defines model for GroupRolesPatchRequestBody.
type GroupRolesPatchRequestBody struct {
	Patches []GroupRolesPatchItem `json:"patches" validate:"required,gt=0,dive"`
}

// Groups defines model for Groups.
type Groups struct {
	Data []Group `json:"data"`
}

// Identities defines model for Identities.
type Identities struct {
	Data []Identity `json:"data"`
}

// Identity defines model for Identity.
type Identity struct {
	AddedBy     string  `json:"addedBy" validate:"required"`
	Certificate *string `json:"certificate,omitempty"`
	Email       string  `json:"email" validate:"required"`
	FirstName   *string `json:"firstName,omitempty"`
	Groups      *int    `json:"groups,omitempty"`
	Id          *string `json:"id,omitempty"`
	Joined      *string `json:"joined,omitempty"`
	LastLogin   *string `json:"lastLogin,omitempty"`
	LastName    *string `json:"lastName,omitempty"`
	Permissions *int    `json:"permissions,omitempty"`
	Roles       *int    `json:"roles,omitempty"`
	Source      string  `json:"source" validate:"required"`
}

// IdentityEntitlementsPatchItem defines model for IdentityEntitlementsPatchItem.
type IdentityEntitlementsPatchItem struct {
	Entitlement EntityEntitlement               `json:"entitlement"`
	Op          IdentityEntitlementsPatchItemOp `json:"op" validate:"required,oneof=add remove"`
}

// IdentityEntitlementsPatchItemOp defines model for IdentityEntitlementsPatchItem.Op.
type IdentityEntitlementsPatchItemOp string

// IdentityEntitlementsPatchRequestBody defines model for IdentityEntitlementsPatchRequestBody.
type IdentityEntitlementsPatchRequestBody struct {
	Patches []IdentityEntitlementsPatchItem `json:"patches" validate:"required,gt=0,dive"`
}

// IdentityGroupsPatchItem defines model for IdentityGroupsPatchItem.
type IdentityGroupsPatchItem struct {
	Group string                    `json:"group" validate:"required"`
	Op    IdentityGroupsPatchItemOp `json:"op" validate:"required,oneof=add remove"`
}

// IdentityGroupsPatchItemOp defines model for IdentityGroupsPatchItem.Op.
type IdentityGroupsPatchItemOp string

// IdentityGroupsPatchRequestBody defines model for IdentityGroupsPatchRequestBody.
type IdentityGroupsPatchRequestBody struct {
	Patches []IdentityGroupsPatchItem `json:"patches" validate:"required,gt=0,dive"`
}

// IdentityProvider defines model for IdentityProvider.
type IdentityProvider struct {
	AcceptsPromptNone   *bool                     `json:"acceptsPromptNone,omitempty"`
	AccountLinkingOnly  *bool                     `json:"accountLinkingOnly,omitempty"`
	ClientID            *string                   `json:"clientID,omitempty"`
	ClientSecret        *string                   `json:"clientSecret,omitempty"`
	DisableIdentityInfo *bool                     `json:"disableIdentityInfo,omitempty"`
	Enabled             *bool                     `json:"enabled,omitempty"`
	Id                  *string                   `json:"id,omitempty"`
	IdentityCount       *int                      `json:"identityCount,omitempty"`
	Name                *string                   `json:"name,omitempty"`
	RedirectUrl         *string                   `json:"redirectUrl,omitempty"`
	StoreTokens         *bool                     `json:"storeTokens,omitempty"`
	StoreTokensReadable *bool                     `json:"storeTokensReadable,omitempty"`
	SyncMode            *IdentityProviderSyncMode `json:"syncMode,omitempty" validate:"omitempty,oneof=import"`
	TrustEmail          *bool                     `json:"trustEmail,omitempty"`
}

// IdentityProviderSyncMode defines model for IdentityProvider.SyncMode.
type IdentityProviderSyncMode string

// IdentityProviders defines model for IdentityProviders.
type IdentityProviders struct {
	Data []IdentityProvider `json:"data"`
}

// IdentityRolesPatchItem defines model for IdentityRolesPatchItem.
type IdentityRolesPatchItem struct {
	Op   IdentityRolesPatchItemOp `json:"op" validate:"required,oneof=add remove"`
	Role string                   `json:"role" validate:"required"`
}

// IdentityRolesPatchItemOp defines model for IdentityRolesPatchItem.Op.
type IdentityRolesPatchItemOp string

// IdentityRolesPatchRequestBody defines model for IdentityRolesPatchRequestBody.
type IdentityRolesPatchRequestBody struct {
	Patches []IdentityRolesPatchItem `json:"patches" validate:"required,gt=0,dive"`
}

// Resource defines model for Resource.
type Resource struct {
	Entity Entity    `json:"entity"`
	Id     string    `json:"id"`
	Name   string    `json:"name"`
	Parent *Resource `json:"parent,omitempty"`
}

// Resources defines model for Resources.
type Resources struct {
	Data []Resource `json:"data"`
}

// Response defines model for Response.
type Response struct {
	Links   ResponseLinks `json:"_links"`
	Meta    ResponseMeta  `json:"_meta"`
	Message string        `json:"message"`
	Status  int           `json:"status"`
}

// ResponseLinks defines model for ResponseLinks.
type ResponseLinks struct {
	Next ResponseLinksNext `json:"next"`
}

// ResponseLinksNext defines model for ResponseLinksNext.
type ResponseLinksNext struct {
	Href string `json:"href"`
}

// ResponseMeta defines model for ResponseMeta.
type ResponseMeta struct {
	Page      *int    `json:"page,omitempty"`
	PageToken *string `json:"pageToken,omitempty"`
	Size      int     `json:"size"`
	Total     *int    `json:"total,omitempty"`
}

// Role defines model for Role.
type Role struct {
	Entitlements *[]RoleEntitlement `json:"entitlements,omitempty" validate:"omitempty,dive"`
	Id           *string            `json:"id,omitempty"`
	Name         string             `json:"name" validate:"required"`
}

// RoleEntitlement defines model for RoleEntitlement.
type RoleEntitlement struct {
	Entitlement *string `json:"entitlement,omitempty"`
	Entity      *Entity `json:"entity,omitempty"`
	Resource    *string `json:"resource,omitempty"`
}

// RoleEntitlementsPatchItem defines model for RoleEntitlementsPatchItem.
type RoleEntitlementsPatchItem struct {
	Entitlement EntityEntitlement           `json:"entitlement"`
	Op          RoleEntitlementsPatchItemOp `json:"op" validate:"required,oneof=add remove"`
}

// RoleEntitlementsPatchItemOp defines model for RoleEntitlementsPatchItem.Op.
type RoleEntitlementsPatchItemOp string

// RoleEntitlementsPatchRequestBody defines model for RoleEntitlementsPatchRequestBody.
type RoleEntitlementsPatchRequestBody struct {
	Patches []RoleEntitlementsPatchItem `json:"patches" validate:"required,gt=0,dive"`
}

// Roles defines model for Roles.
type Roles struct {
	Data []Role `json:"data"`
}

// FilterParam defines model for FilterParam.
type FilterParam = string

// PaginationNextToken defines model for PaginationNextToken.
type PaginationNextToken = string

// PaginationNextTokenHeader defines model for PaginationNextTokenHeader.
type PaginationNextTokenHeader = string

// PaginationPage defines model for PaginationPage.
type PaginationPage = int

// PaginationSize defines model for PaginationSize.
type PaginationSize = int

// BadRequest defines model for BadRequest.
type BadRequest = Response

// NotFound defines model for NotFound.
type NotFound = Response

// Unauthorized defines model for Unauthorized.
type Unauthorized = Response

// Default defines model for default.
type Default = Response

// GetIdentityProvidersParams defines parameters for GetIdentityProviders.
type GetIdentityProvidersParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`

	// NextPageToken The continuation token to retrieve the next set of results
	NextPageToken *PaginationNextTokenHeader `json:"Next-Page-Token,omitempty"`
}

// GetAvailableIdentityProvidersParams defines parameters for GetAvailableIdentityProviders.
type GetAvailableIdentityProvidersParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`

	// NextPageToken The continuation token to retrieve the next set of results
	NextPageToken *PaginationNextTokenHeader `json:"Next-Page-Token,omitempty"`
}

// GetEntitlementsParams defines parameters for GetEntitlements.
type GetEntitlementsParams struct {
	// Filter A string to filter results by
	Filter *FilterParam `form:"filter,omitempty" json:"filter,omitempty"`
}

// GetGroupsParams defines parameters for GetGroups.
type GetGroupsParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`

	// Filter A string to filter results by
	Filter *FilterParam `form:"filter,omitempty" json:"filter,omitempty"`

	// NextPageToken The continuation token to retrieve the next set of results
	NextPageToken *PaginationNextTokenHeader `json:"Next-Page-Token,omitempty"`
}

// GetGroupsItemEntitlementsParams defines parameters for GetGroupsItemEntitlements.
type GetGroupsItemEntitlementsParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`

	// NextPageToken The continuation token to retrieve the next set of results
	NextPageToken *PaginationNextTokenHeader `json:"Next-Page-Token,omitempty"`
}

// GetGroupsItemIdentitiesParams defines parameters for GetGroupsItemIdentities.
type GetGroupsItemIdentitiesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`

	// NextPageToken The continuation token to retrieve the next set of results
	NextPageToken *PaginationNextTokenHeader `json:"Next-Page-Token,omitempty"`
}

// GetGroupsItemRolesParams defines parameters for GetGroupsItemRoles.
type GetGroupsItemRolesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`

	// NextPageToken The continuation token to retrieve the next set of results
	NextPageToken *PaginationNextTokenHeader `json:"Next-Page-Token,omitempty"`
}

// GetIdentitiesParams defines parameters for GetIdentities.
type GetIdentitiesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`

	// Filter A string to filter results by
	Filter *FilterParam `form:"filter,omitempty" json:"filter,omitempty"`

	// NextPageToken The continuation token to retrieve the next set of results
	NextPageToken *PaginationNextTokenHeader `json:"Next-Page-Token,omitempty"`
}

// GetIdentitiesItemEntitlementsParams defines parameters for GetIdentitiesItemEntitlements.
type GetIdentitiesItemEntitlementsParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`

	// NextPageToken The continuation token to retrieve the next set of results
	NextPageToken *PaginationNextTokenHeader `json:"Next-Page-Token,omitempty"`
}

// GetIdentitiesItemGroupsParams defines parameters for GetIdentitiesItemGroups.
type GetIdentitiesItemGroupsParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`

	// NextPageToken The continuation token to retrieve the next set of results
	NextPageToken *PaginationNextTokenHeader `json:"Next-Page-Token,omitempty"`
}

// GetIdentitiesItemRolesParams defines parameters for GetIdentitiesItemRoles.
type GetIdentitiesItemRolesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`

	// NextPageToken The continuation token to retrieve the next set of results
	NextPageToken *PaginationNextTokenHeader `json:"Next-Page-Token,omitempty"`
}

// GetResourcesParams defines parameters for GetResources.
type GetResourcesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken  *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`
	EntityType *string              `form:"entityType,omitempty" json:"entityType,omitempty"`

	// NextPageToken The continuation token to retrieve the next set of results
	NextPageToken *PaginationNextTokenHeader `json:"Next-Page-Token,omitempty"`
}

// GetRolesParams defines parameters for GetRoles.
type GetRolesParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`

	// Filter A string to filter results by
	Filter *FilterParam `form:"filter,omitempty" json:"filter,omitempty"`

	// NextPageToken The continuation token to retrieve the next set of results
	NextPageToken *PaginationNextTokenHeader `json:"Next-Page-Token,omitempty"`
}

// GetRolesItemEntitlementsParams defines parameters for GetRolesItemEntitlements.
type GetRolesItemEntitlementsParams struct {
	// Size The number of records to return per response
	Size *PaginationSize `form:"size,omitempty" json:"size,omitempty"`

	// Page The record offset to return results from
	Page *PaginationPage `form:"page,omitempty" json:"page,omitempty"`

	// NextToken The continuation token to retrieve the next set of results
	NextToken *PaginationNextToken `form:"nextToken,omitempty" json:"nextToken,omitempty"`

	// NextPageToken The continuation token to retrieve the next set of results
	NextPageToken *PaginationNextTokenHeader `json:"Next-Page-Token,omitempty"`
}

// PostIdentityProvidersJSONRequestBody defines body for PostIdentityProviders for application/json ContentType.
type PostIdentityProvidersJSONRequestBody = IdentityProvider

// PutIdentityProvidersItemJSONRequestBody defines body for PutIdentityProvidersItem for application/json ContentType.
type PutIdentityProvidersItemJSONRequestBody = IdentityProvider

// PostGroupsJSONRequestBody defines body for PostGroups for application/json ContentType.
type PostGroupsJSONRequestBody = Group

// PutGroupsItemJSONRequestBody defines body for PutGroupsItem for application/json ContentType.
type PutGroupsItemJSONRequestBody = Group

// PatchGroupsItemEntitlementsJSONRequestBody defines body for PatchGroupsItemEntitlements for application/json ContentType.
type PatchGroupsItemEntitlementsJSONRequestBody = GroupEntitlementsPatchRequestBody

// PatchGroupsItemIdentitiesJSONRequestBody defines body for PatchGroupsItemIdentities for application/json ContentType.
type PatchGroupsItemIdentitiesJSONRequestBody = GroupIdentitiesPatchRequestBody

// PatchGroupsItemRolesJSONRequestBody defines body for PatchGroupsItemRoles for application/json ContentType.
type PatchGroupsItemRolesJSONRequestBody = GroupRolesPatchRequestBody

// PostIdentitiesJSONRequestBody defines body for PostIdentities for application/json ContentType.
type PostIdentitiesJSONRequestBody = Identity

// PutIdentitiesItemJSONRequestBody defines body for PutIdentitiesItem for application/json ContentType.
type PutIdentitiesItemJSONRequestBody = Identity

// PatchIdentitiesItemEntitlementsJSONRequestBody defines body for PatchIdentitiesItemEntitlements for application/json ContentType.
type PatchIdentitiesItemEntitlementsJSONRequestBody = IdentityEntitlementsPatchRequestBody

// PatchIdentitiesItemGroupsJSONRequestBody defines body for PatchIdentitiesItemGroups for application/json ContentType.
type PatchIdentitiesItemGroupsJSONRequestBody = IdentityGroupsPatchRequestBody

// PatchIdentitiesItemRolesJSONRequestBody defines body for PatchIdentitiesItemRoles for application/json ContentType.
type PatchIdentitiesItemRolesJSONRequestBody = IdentityRolesPatchRequestBody

// PostRolesJSONRequestBody defines body for PostRoles for application/json ContentType.
type PostRolesJSONRequestBody = Role

// PutRolesItemJSONRequestBody defines body for PutRolesItem for application/json ContentType.
type PutRolesItemJSONRequestBody = Role

// PatchRolesItemEntitlementsJSONRequestBody defines body for PatchRolesItemEntitlements for application/json ContentType.
type PatchRolesItemEntitlementsJSONRequestBody = RoleEntitlementsPatchRequestBody

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"TB0oIq2fAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
